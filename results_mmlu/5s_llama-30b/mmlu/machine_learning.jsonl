{"type": "result", "data": {"idx": 0, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.21776217222213745, 0.14062073826789856, 0.4133140742778778, 0.22830303013324738], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 1, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2545751631259918, 0.1696082502603531, 0.3647102415561676, 0.2111063450574875], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 2, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.1828908920288086, 0.13593491911888123, 0.4387975335121155, 0.24237653613090515], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 3, "options": ["12", "24", "48", "72"], "probs": [0.22896721959114075, 0.25952115654945374, 0.2894948124885559, 0.2220168262720108], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 4, "options": ["convolutional networks", "graph networks", "fully connected networks", "RBF networks"], "probs": [0.9316679239273071, 0.01578102633357048, 0.042903658002614975, 0.00964734423905611], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 5, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.19382640719413757, 0.12516207993030548, 0.45783090591430664, 0.22318057715892792], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 6, "options": ["O(D)", "O(N)", "O(ND)", "O(ND^2)"], "probs": [0.18365447223186493, 0.172561377286911, 0.4764881730079651, 0.16729600727558136], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 7, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.18670548498630524, 0.12246394902467728, 0.42743316292762756, 0.26339736580848694], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 8, "options": ["2", "4", "8", "16"], "probs": [0.28098252415657043, 0.27242159843444824, 0.24416209757328033, 0.202433779835701], "ideal": "C", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 9, "options": ["Lower variance", "Higher variance", "Same variance", "None of the above"], "probs": [0.29919129610061646, 0.3039509952068329, 0.2640693783760071, 0.13278834521770477], "ideal": "A", "sampled": "B", "correct": false}}
{"type": "result", "data": {"idx": 10, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2075405716896057, 0.13612303137779236, 0.393890380859375, 0.2624460458755493], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 11, "options": ["good fitting", "overfitting", "underfitting", "all of the above"], "probs": [0.13577133417129517, 0.18559090793132782, 0.32071447372436523, 0.357923299074173], "ideal": "C", "sampled": "D", "correct": false}}
{"type": "result", "data": {"idx": 12, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.24331985414028168, 0.15959542989730835, 0.388887494802475, 0.20819716155529022], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 13, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.15557320415973663, 0.13518960773944855, 0.4229651391506195, 0.2862721085548401], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 14, "options": ["pure", "not pure", "useful", "useless"], "probs": [0.08040677756071091, 0.7632014155387878, 0.07209370285272598, 0.08429799228906631], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 15, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.22283461689949036, 0.1656319946050644, 0.38509705662727356, 0.2264363020658493], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 16, "options": ["This feature has a strong effect on the model (should be retained)", "This feature does not have a strong effect on the model (should be ignored)", "It is not possible to comment on the importance of this feature without additional information", "Nothing can be determined."], "probs": [0.18978247046470642, 0.3658871352672577, 0.31788134574890137, 0.1264490932226181], "ideal": "C", "sampled": "B", "correct": false}}
{"type": "result", "data": {"idx": 17, "options": ["The number of hidden nodes", "The learning rate", "The initial choice of weights", "The use of a constant-term unit input"], "probs": [0.5833580493927002, 0.13641239702701569, 0.18647056818008423, 0.09375899285078049], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 18, "options": ["The polynomial degree", "Whether we learn the weights by matrix inversion or gradient descent", "The assumed variance of the Gaussian noise", "The use of a constant-term unit input"], "probs": [0.7595286965370178, 0.06636814773082733, 0.07289568334817886, 0.101207435131073], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 19, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.25168395042419434, 0.16767513751983643, 0.35497429966926575, 0.22566662728786469], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 20, "options": ["Requires the dimension of the feature space to be no bigger than the number of samples", "Has the smallest value of the objective function when K = 1", "Minimizes the within class variance for a given number of clusters", "Converges to the global optimum if and only if the initial means are chosen as some of the samples themselves"], "probs": [0.12775790691375732, 0.10267484933137894, 0.6002423167228699, 0.16932490468025208], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 21, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.24937990307807922, 0.16614584624767303, 0.37441301345825195, 0.2100612223148346], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 22, "options": ["0", "1", "2", "3"], "probs": [0.35081103444099426, 0.4299187958240509, 0.16064278781414032, 0.058627452701330185], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 23, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.19175513088703156, 0.1297655701637268, 0.43217983841896057, 0.2462993711233139], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 24, "options": ["Decision Trees", "Density-based clustering", "Model-based clustering", "K-means clustering"], "probs": [0.07759349048137665, 0.7250148057937622, 0.06535743176937103, 0.13203419744968414], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 25, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.23039093613624573, 0.1354568898677826, 0.41077378392219543, 0.22337840497493744], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 26, "options": ["they are biased", "they have high variance", "they are not consistent estimators", "None of the above"], "probs": [0.1425112634897232, 0.5214182138442993, 0.13183782994747162, 0.20423270761966705], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 27, "options": ["linear in D", "linear in N", "polynomial in D", "dependent on the number of iterations"], "probs": [0.2557627856731415, 0.2120784968137741, 0.33898746967315674, 0.1931712031364441], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 28, "options": ["Increase bias", "Decrease bias", "Increase variance", "Decrease variance"], "probs": [0.16928987205028534, 0.45320650935173035, 0.15661105513572693, 0.2208925485610962], "ideal": "D", "sampled": "B", "correct": false}}
{"type": "result", "data": {"idx": 29, "options": ["Best-subset selection", "Forward stepwise selection", "Forward stage wise selection", "All of the above"], "probs": [0.17997662723064423, 0.08911313861608505, 0.14925552904605865, 0.5816547274589539], "ideal": "C", "sampled": "D", "correct": false}}
{"type": "result", "data": {"idx": 30, "options": ["Optimize a convex objective function", "Can only be trained with stochastic gradient descent", "Can use a mix of different activation functions", "None of the above"], "probs": [0.06411280483007431, 0.030765730887651443, 0.5990661382675171, 0.3060553967952728], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 31, "options": ["0.0368", "0.473", "0.078", "None of the above"], "probs": [0.3782671391963959, 0.20896875858306885, 0.23676976561546326, 0.17599435150623322], "ideal": "C", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 32, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.20758837461471558, 0.1449405699968338, 0.4193994402885437, 0.22807155549526215], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 33, "options": ["It can not be applied to non-differentiable functions.", "It can not be applied to non-continuous functions.", "It is hard to implement.", "It runs reasonably slow for multiple linear regression."], "probs": [0.182098388671875, 0.13746775686740875, 0.42349883913993835, 0.25693511962890625], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 34, "options": ["Supervised learning", "Unsupervised learning", "Clustering", "None of the above"], "probs": [0.7385861873626709, 0.10807836055755615, 0.07666459679603577, 0.07667088508605957], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 35, "options": ["It relates inputs to outputs.", "It is used for prediction.", "It may be used for interpretation.", "It discovers causal relationships"], "probs": [0.166757732629776, 0.10770097374916077, 0.19501516222953796, 0.5305261015892029], "ideal": "D", "sampled": "D", "correct": true}}
{"type": "result", "data": {"idx": 36, "options": ["To save computing time during testing", "To save space for storing the Decision Tree", "To make the training set error smaller", "To avoid overfitting the training set"], "probs": [0.07248029857873917, 0.05220991373062134, 0.08343224227428436, 0.7918775677680969], "ideal": "D", "sampled": "D", "correct": true}}
{"type": "result", "data": {"idx": 37, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2297564297914505, 0.15308108925819397, 0.39088109135627747, 0.22628137469291687], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 38, "options": ["Increase the amount of training data.", "Improve the optimisation algorithm being used for error minimisation.", "Decrease the model complexity.", "Reduce the noise in the training data."], "probs": [0.3143146336078644, 0.2953021824359894, 0.19670720398426056, 0.1936759203672409], "ideal": "B", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 39, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.24538680911064148, 0.13984905183315277, 0.41750508546829224, 0.1972590982913971], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 40, "options": ["For two dimensional data points, the separating hyperplane learnt by a linear SVM will be a straight line.", "In theory, a Gaussian kernel SVM cannot model any complex separating hyperplane.", "For every kernel function used in a SVM, one can obtain an equivalent closed form basis expansion.", "Overfitting in an SVM is not a function of number of support vectors."], "probs": [0.28516700863838196, 0.21527382731437683, 0.18130606412887573, 0.3182530999183655], "ideal": "A", "sampled": "D", "correct": false}}
{"type": "result", "data": {"idx": 41, "options": ["P(H, U, P, W) = P(H) * P(W) * P(P) * P(U)", "P(H, U, P, W) = P(H) * P(W) * P(P | W) * P(W | H, P)", "P(H, U, P, W) = P(H) * P(W) * P(P | W) * P(U | H, P)", "None of the above"], "probs": [0.20347146689891815, 0.26130038499832153, 0.315176397562027, 0.2200518101453781], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 42, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.1747625321149826, 0.13826540112495422, 0.4325971007347107, 0.25437498092651367], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 43, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.13564559817314148, 0.10401684790849686, 0.44482091069221497, 0.3155166208744049], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 44, "options": ["Stochastic Gradient Descent", "Mini-Batch Gradient Descent", "Batch Gradient Descent", "All of the above"], "probs": [0.22979237139225006, 0.1996588259935379, 0.2563820779323578, 0.31416672468185425], "ideal": "D", "sampled": "D", "correct": true}}
{"type": "result", "data": {"idx": 45, "options": ["Decreases model bias", "Decreases estimation bias", "Decreases variance", "Doesn\u2019t affect bias and variance"], "probs": [0.20743128657341003, 0.2502591609954834, 0.3213660717010498, 0.22094352543354034], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 46, "options": ["3", "4", "7", "15"], "probs": [0.19015416502952576, 0.19625188410282135, 0.32353922724723816, 0.2900547981262207], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 47, "options": ["anomaly detection", "one-class detection", "train-test mismatch robustness", "background detection"], "probs": [0.9043989777565002, 0.04502829164266586, 0.028624864295125008, 0.021947918459773064], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 48, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.31110990047454834, 0.21385447680950165, 0.28330618143081665, 0.19172939658164978], "ideal": "D", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 49, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.26627999544143677, 0.16927558183670044, 0.37556761503219604, 0.18887680768966675], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 50, "options": ["O(1)", "O( N )", "O(log N )", "O( N^2 )"], "probs": [0.12922093272209167, 0.6565257906913757, 0.13336098194122314, 0.08089227974414825], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 51, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.24719029664993286, 0.17259453237056732, 0.3653779625892639, 0.2148371785879135], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 52, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.14420704543590546, 0.13339672982692719, 0.44428640604019165, 0.27810975909233093], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 53, "options": ["Is unbounded, encompassing all real numbers.", "Is unbounded, encompassing all integers.", "Is bounded between 0 and 1.", "Is bounded between -1 and 1."], "probs": [0.01809854432940483, 0.012440658174455166, 0.9431216716766357, 0.026339126750826836], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 54, "options": ["Linear hard-margin SVM.", "Linear Logistic Regression.", "Linear Soft margin SVM.", "The centroid method."], "probs": [0.308612197637558, 0.17045865952968597, 0.2441825270652771, 0.27674663066864014], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 55, "options": ["Partitioning based clustering", "K-means clustering", "Grid based clustering", "All of the above"], "probs": [0.44062140583992004, 0.1780337542295456, 0.1453334391117096, 0.23601137101650238], "ideal": "D", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 56, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.17351096868515015, 0.11741422116756439, 0.4791368544101715, 0.22993789613246918], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 57, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.26386547088623047, 0.1575905978679657, 0.3664263188838959, 0.21211762726306915], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 58, "options": ["P(E, F), P(H), P(E|H), P(F|H)", "P(E, F), P(H), P(E, F|H)", "P(H), P(E|H), P(F|H)", "P(E, F), P(E|H), P(F|H)"], "probs": [0.23492203652858734, 0.185856893658638, 0.25803929567337036, 0.3211817443370819], "ideal": "B", "sampled": "D", "correct": false}}
{"type": "result", "data": {"idx": 59, "options": ["The use of sampling with replacement as the sampling technique", "The use of weak classifiers", "The use of classification algorithms which are not prone to overfitting", "The practice of validation performed on every classifier trained"], "probs": [0.3385276794433594, 0.27203357219696045, 0.18407613039016724, 0.20536254346370697], "ideal": "B", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 60, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.24791312217712402, 0.16517527401447296, 0.37807369232177734, 0.20883789658546448], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 61, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2517697513103485, 0.17306576669216156, 0.3663727343082428, 0.20879171788692474], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 62, "options": ["0", "1", "2", "3"], "probs": [0.22780510783195496, 0.38761672377586365, 0.2663857340812683, 0.11819244176149368], "ideal": "C", "sampled": "B", "correct": false}}
{"type": "result", "data": {"idx": 63, "options": ["The examples farthest from the decision boundary.", "The only examples necessary to compute f(x) in an SVM.", "The data centroid.", "All the examples that have a non-zero weight \u03b1k in a SVM."], "probs": [0.8258866667747498, 0.07216707617044449, 0.03924020007252693, 0.0627061054110527], "ideal": "B", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 64, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.24627937376499176, 0.15903708338737488, 0.39360740780830383, 0.20107612013816833], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 65, "options": ["Regularization is too low and model is overfitting", "Regularization is too high and model is underfitting", "Step size is too large", "Step size is too small"], "probs": [0.456687867641449, 0.19640886783599854, 0.17885416746139526, 0.16804911196231842], "ideal": "C", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 66, "options": ["0.0495", "0.078", "0.635", "0.97"], "probs": [0.27860552072525024, 0.2239285111427307, 0.33615148067474365, 0.1613144725561142], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 67, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.21952341496944427, 0.1709895133972168, 0.379349946975708, 0.23013712465763092], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 68, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2553403377532959, 0.17279422283172607, 0.36012542247772217, 0.21174003183841705], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 69, "options": ["Expectation Maximization", "CART", "Gaussian Na\u00efve Bayes", "Apriori"], "probs": [0.7150962352752686, 0.09091571718454361, 0.09093596786260605, 0.10305210202932358], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 70, "options": ["Your decision trees are too shallow.", "You need to increase the learning rate.", "You are overfitting.", "None of the above."], "probs": [0.028270050883293152, 0.016620278358459473, 0.8263648152351379, 0.12874487042427063], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 71, "options": ["linear in K", "quadratic in K", "cubic in K", "exponential in K"], "probs": [0.39614570140838623, 0.34421584010124207, 0.13691207766532898, 0.1227264553308487], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 72, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.275898277759552, 0.18965812027454376, 0.2983623445034027, 0.23608118295669556], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 73, "options": ["1/6", "1/4", "3/4", "1"], "probs": [0.3853023052215576, 0.24499018490314484, 0.23011916875839233, 0.1395883709192276], "ideal": "D", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 74, "options": ["Nando de Frietas", "Yann LeCun", "Stuart Russell", "Jitendra Malik"], "probs": [0.015285556204617023, 0.02946706861257553, 0.9168112277984619, 0.0384361632168293], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 75, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.26516756415367126, 0.16085389256477356, 0.3799024522304535, 0.19407613575458527], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 76, "options": ["Whether kernel function is Gaussian versus triangular versus box-shaped", "Whether we use Euclidian versus L1 versus L\u221e metrics", "The kernel width", "The maximum height of the kernel function"], "probs": [0.10457568615674973, 0.05425898730754852, 0.7609710097312927, 0.08019444346427917], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 77, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.17061516642570496, 0.12483808398246765, 0.4638573229312897, 0.2406895011663437], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 78, "options": ["Whether we learn the class centers by Maximum Likelihood or Gradient Descent", "Whether we assume full class covariance matrices or diagonal class covariance matrices", "Whether we have equal class priors or priors estimated from the data.", "Whether we allow classes to have different mean vectors or we force them to share the same mean vector"], "probs": [0.13107812404632568, 0.4721905589103699, 0.14397749304771423, 0.2527538239955902], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 79, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.22873885929584503, 0.1409379094839096, 0.40150338411331177, 0.2288198322057724], "ideal": "D", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 80, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2122787982225418, 0.134973406791687, 0.41574737429618835, 0.2370004802942276], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 81, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.227681502699852, 0.1425047516822815, 0.38735032081604004, 0.2424633800983429], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 82, "options": ["Supervised learning", "Unsupervised learning", "Both (a) and (b)", "Neither (a) nor (b)"], "probs": [0.08589009195566177, 0.7901182770729065, 0.07348719984292984, 0.050504472106695175], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 83, "options": ["Transform data to zero mean", "Transform data to zero median", "Not possible", "None of these"], "probs": [0.6977640986442566, 0.08204324543476105, 0.1820346564054489, 0.03815799951553345], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 84, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.1899409145116806, 0.14339666068553925, 0.4149284362792969, 0.2517338991165161], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 85, "options": ["will never decrease the training error.", "will never increase the training error.", "will never decrease the testing error.", "will never increase"], "probs": [0.34019675850868225, 0.1938924938440323, 0.2865573763847351, 0.17935344576835632], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 86, "options": ["p(y|x, w)", "p(y, x)", "p(w|x, w)", "None of the above"], "probs": [0.8261439800262451, 0.09126529097557068, 0.02456720545887947, 0.05802348256111145], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 87, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.15969699621200562, 0.13449853658676147, 0.46219754219055176, 0.24360689520835876], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 88, "options": ["The use of a non-Gaussian noise model in probabilistic regression.", "The use of probabilistic modelling for regression.", "The use of prior distributions on the parameters in a probabilistic model.", "The use of class priors in Gaussian Discriminant Analysis."], "probs": [0.19613048434257507, 0.07444950938224792, 0.533236026763916, 0.19618400931358337], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 89, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.2321547567844391, 0.164663165807724, 0.3949855864048004, 0.2081964761018753], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 90, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.26323506236076355, 0.1596735268831253, 0.36551159620285034, 0.2115798145532608], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 91, "options": ["Ridge", "Lasso", "both (a) and (b)", "neither (a) nor (b)"], "probs": [0.175627663731575, 0.33861595392227173, 0.3181222677230835, 0.16763421893119812], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 92, "options": ["Expectation", "Maximization", "No modification necessary", "Both"], "probs": [0.23683634400367737, 0.45659178495407104, 0.07336873561143875, 0.23320314288139343], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 93, "options": ["Whether we learn the class centers by Maximum Likelihood or Gradient Descent", "Whether we assume full class covariance matrices or diagonal class covariance matrices", "Whether we have equal class priors or priors estimated from the data", "Whether we allow classes to have different mean vectors or we force them to share the same mean vector"], "probs": [0.10862553864717484, 0.4946013391017914, 0.1193113625049591, 0.27746182680130005], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 94, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.23033681511878967, 0.1292201578617096, 0.4171333312988281, 0.223309725522995], "ideal": "B", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 95, "options": ["PCA", "Decision Tree", "Linear Regression", "Naive Bayesian"], "probs": [0.8839139342308044, 0.02841605618596077, 0.05392298847436905, 0.03374699875712395], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 96, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.22049234807491302, 0.14690375328063965, 0.41201481223106384, 0.22058908641338348], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 97, "options": ["P(A | B) * P(B | C) * P(C | A)", "P(C | A, B) * P(A) * P(B)", "P(A, B | C) * P(C)", "P(A | B, C) * P(B | A, C) * P(C | A, B)"], "probs": [0.21127305924892426, 0.10961466282606125, 0.4202142655849457, 0.258897989988327], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 98, "options": ["Predicting the amount of rainfall based on various cues", "Detecting fraudulent credit card transactions", "Training a robot to solve a maze", "All of the above"], "probs": [0.49768292903900146, 0.13395224511623383, 0.14041417837142944, 0.2279505729675293], "ideal": "B", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 99, "options": ["L0 norm", "L1 norm", "L2 norm", "either (a) or (b)"], "probs": [0.2416643649339676, 0.3408876061439514, 0.19732077419757843, 0.22012722492218018], "ideal": "D", "sampled": "B", "correct": false}}
{"type": "result", "data": {"idx": 100, "options": ["P(A|B) decreases", "P(B|A) decreases", "P(B) decreases", "All of above"], "probs": [0.3770919740200043, 0.19262102246284485, 0.2050424963235855, 0.2252444475889206], "ideal": "B", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 101, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.22757859528064728, 0.15400780737400055, 0.3871729373931885, 0.2312406599521637], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 102, "options": ["Bias increase ; Variance increase", "Bias increase ; Variance decrease", "Bias decrease ; Variance increase", "Bias decrease ; Variance decrease"], "probs": [0.1672019213438034, 0.401195764541626, 0.25902751088142395, 0.17257478833198547], "ideal": "B", "sampled": "B", "correct": true}}
{"type": "result", "data": {"idx": 103, "options": ["\\texttt{5 + torch.randn(10,5) * 16} ; \\texttt{torch.rand(10,10,low=-1,high=1)}", "\\texttt{5 + torch.randn(10,5) * 16} ; \\texttt{(torch.rand(10,10) - 0.5) / 0.5}", "\\texttt{5 + torch.randn(10,5) * 4} ; \\texttt{2 * torch.rand(10,10) - 1}", "\\texttt{torch.normal(torch.ones(10,5)*5,torch.ones(5,5)*16)} ; \\texttt{2 * torch.rand(10,10) - 1}"], "probs": [0.25930553674697876, 0.2051423341035843, 0.1810334324836731, 0.3545186221599579], "ideal": "C", "sampled": "D", "correct": false}}
{"type": "result", "data": {"idx": 104, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.26157066226005554, 0.16628393530845642, 0.38661685585975647, 0.18552854657173157], "ideal": "A", "sampled": "C", "correct": false}}
{"type": "result", "data": {"idx": 105, "options": ["After applying batch normalization, the layer\u2019s activations will follow a standard Gaussian distribution.", "The bias parameter of affine layers becomes redundant if a batch normalization layer follows immediately afterward.", "The standard weight initialization must be changed when using Batch Normalization.", "Batch Normalization is equivalent to Layer Normalization for convolutional neural networks."], "probs": [0.38543152809143066, 0.21622635424137115, 0.18208663165569305, 0.21625548601150513], "ideal": "B", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 106, "options": ["$\\nabla_w f(w) = (X^\\top X + \\lambda I)w - X^\\top y + \\lambda w$", "$\\nabla_w f(w) = X^\\top X w - X^\\top y + \\lambda$", "$\\nabla_w f(w) = X^\\top X w - X^\\top y + \\lambda w$", "$\\nabla_w f(w) = X^\\top X w - X^\\top y + (\\lambda+1) w$"], "probs": [0.44618818163871765, 0.18313902616500854, 0.25425800681114197, 0.11641471832990646], "ideal": "C", "sampled": "A", "correct": false}}
{"type": "result", "data": {"idx": 107, "options": ["Convolving an image with $\\begin{bmatrix}1 & 0 & 0\\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix}$ would not change the image", "Convolving an image with $\\begin{bmatrix}0 & 0 & 0\\\\ 0 & 1 & 0 \\\\ 0 & 0 & 0 \\end{bmatrix}$ would not change the image", "Convolving an image with $\\begin{bmatrix}1 & 1 & 1\\\\ 1 & 1 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix}$ would not change the image", "Convolving an image with $\\begin{bmatrix}0 & 0 & 0\\\\ 0 & 0 & 0 \\\\ 0 & 0 & 0 \\end{bmatrix}$ would not change the image"], "probs": [0.2543964982032776, 0.1890716552734375, 0.1920420229434967, 0.3644898235797882], "ideal": "B", "sampled": "D", "correct": false}}
{"type": "result", "data": {"idx": 108, "options": ["Semantic segmentation models predict the class of each pixel, while multiclass image classifiers predict the class of entire image.", "A bounding box with an IoU (intersection over union) equal to $96\\%$ would likely be considered at true positive.", "When a predicted bounding box does not correspond to any object in the scene, it is considered a false positive.", "A bounding box with an IoU (intersection over union) equal to $3\\%$ would likely be considered at false negative."], "probs": [0.23471231758594513, 0.2071523368358612, 0.26597291231155396, 0.2921624481678009], "ideal": "D", "sampled": "D", "correct": true}}
{"type": "result", "data": {"idx": 109, "options": ["The following fully connected network without activation functions is linear: $g_3(g_2(g_1(x)))$, where $g_i(x) = W_i x$ and $W_i$ are matrices.", "Leaky ReLU $\\max\\{0.01x,x\\}$ is convex.", "A combination of ReLUs such as $ReLU(x) - ReLU(x-1)$ is convex.", "The loss $\\log \\sigma(x)= -\\log(1+e^{-x})$ is concave"], "probs": [0.2421192079782486, 0.2310737818479538, 0.29206734895706177, 0.23473966121673584], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "result", "data": {"idx": 110, "options": ["111021", "110010", "111110", "110011"], "probs": [0.32507526874542236, 0.2572351396083832, 0.22347839176654816, 0.1942112296819687], "ideal": "A", "sampled": "A", "correct": true}}
{"type": "result", "data": {"idx": 111, "options": ["True, True", "False, False", "True, False", "False, True"], "probs": [0.21143262088298798, 0.15230919420719147, 0.40758854150772095, 0.2286696583032608], "ideal": "C", "sampled": "C", "correct": true}}
{"type": "metric", "data": {"accuracy": 0.4107142857142857, "boostrap_std": 0.04493474577151873}}
